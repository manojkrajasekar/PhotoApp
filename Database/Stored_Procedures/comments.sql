DROP PROCEDURE IF EXISTS ADD_COMMENT;
/* This stored procedure when executed, saves the added comment in the comments table */
DELIMITER //
CREATE PROCEDURE ADD_COMMENT
(
	IN _USER_ID INTEGER,
	IN _POST_ID INTEGER, 
	IN _COMMENT_CONTENT VARCHAR(100),
	OUT _COMMENT_ID INTEGER
)
BEGIN
	INSERT INTO COMMENTS(USER_ID, POST_ID, COMMENT_CONTENT) VALUES(_USER_ID, _POST_ID, _COMMENT_CONTENT);
	
	SELECT C.COMMENT_ID FROM COMMENTS C 
		WHERE C.POST_ID = _POST_ID;
END;
//
DELIMITER ;


DROP PROCEDURE IF EXISTS GET_COMMENTS;
/* This stored procedure when executed, displays all the comments for a particular post */
DELIMITER //
CREATE PROCEDURE GET_COMMENTS
(
	IN _USER_ID INTEGER, 
	IN _POST_ID INTEGER
)
BEGIN
	SELECT  U.FIRST_NAME, C.COMMENT_CONTENT FROM USER U JOIN COMMENTS C ON C.USER_ID = U.USER_ID 
		WHERE C.POST_ID = POST_ID AND C.IS_ACTIVE = 1 ; 
END;
//
DELIMITER ;


DROP PROCEDURE IF EXISTS UPDATE_COMMENT;
/* This stored procedure when executed, updates the comment */
DELIMITER //
CREATE PROCEDURE UPDATE_COMMENT
(
	IN _COMMENT_CONTENT VARCHAR(100), 
	IN _COMMENT_ID INTEGER, 
	IN _USER_ID INTEGER
)
BEGIN
	UPDATE COMMENTS C
		SET COMMENT_CONTENT = _COMMENT_CONTENT
			WHERE C.COMMENT_ID = _COMMENT_ID;
END;
//
DELIMITER ;


DROP PROCEDURE IF EXISTS DELETE_COMMENT;
/* This stored procedure when executed, Deactivates the comment */
DELIMITER //
CREATE PROCEDURE DELETE_COMMENT
(
	IN _COMMENT_ID INTEGER, 
	IN _USER_ID INTEGER
)
BEGIN
	UPDATE COMMENTS C
		SET C.IS_ACTIVE = 0
			WHERE C.COMMENT_ID = _COMMENT_ID;
END;
//
DELIMITER ;

